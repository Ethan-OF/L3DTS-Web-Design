{
    "sourceFile": "sync.cpp",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 12,
            "patches": [
                {
                    "date": 1692671947287,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1692672048505,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,11 @@\n         for(int y = 1; y < 1080; y++)\r\n         {\r\n             //Draw pixel\r\n             SetPixel(hdc, x, y, color);\r\n+\r\n+            //Testing lag to cause pixel delay\r\n+            std::cout << \"Lag: Thread\\n\";\r\n         }\r\n     }\r\n }\r\n \r\n@@ -36,8 +39,11 @@\n         for(int y = 1; y < 1080; y++)\r\n         {\r\n             //Draw pixel\r\n             SetPixel(hdc, x, y, RGB(255, 255, 255));\r\n+\r\n+            //Testing lag to cause pixel delay\r\n+            std::cout << \"Lag: Main\\n\";\r\n         }\r\n     }\r\n \r\n     //End system\r\n"
                },
                {
                    "date": 1692672117327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,50 @@\n+#include <iostream>\r\n+#include <windows.h>\r\n+#include <thread>\r\n+#include <list>\r\n+\r\n+void drawScreen(HDC hdc, COLORREF color)\r\n+{\r\n+    for(int x = 1; x < 1920; x++)\r\n+    {\r\n+        for(int y = 1; y < 1080; y++)\r\n+        {\r\n+            //Draw pixel\r\n+            SetPixel(hdc, x, y, color);\r\n+\r\n+            //Testing lag to cause pixel delay\r\n+            std::cout << \"Lag: Thread\\n\";\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+int main()\r\n+{\r\n+    //Define variables\r\n+    HWND hwnd = GetDesktopWindow();\r\n+    HDC hdc = GetWindowDC(hwnd);\r\n+\r\n+    std::list<std::thread*> threadList;\r\n+\r\n+    //Start threads\r\n+\r\n+    threadList.push_back(new std::thread(drawScreen, std::ref(hdc), std:ref(RGB(255, 0, 0))));\r\n+    sleep(1000);\r\n+    threadList.push_back(new std::thread(drawScreen, std::ref(hdc), RGB(200, 100, 40)));\r\n+\r\n+    //Utilize main thread\r\n+\r\n+    for(int x = 1; x < 1920; x++)\r\n+    {\r\n+        for(int y = 1; y < 1080; y++)\r\n+        {\r\n+            //Draw pixel\r\n+            SetPixel(hdc, x, y, RGB(255, 255, 255));\r\n+\r\n+            //Testing lag to cause pixel delay\r\n+            std::cout << \"Lag: Main\\n\";\r\n+        }\r\n+    }\r\n+\r\n+    //End system\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692672226521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,50 @@\n+#include <iostream>\r\n+#include <windows.h>\r\n+#include <thread>\r\n+#include <list>\r\n+\r\n+void drawScreen(HDC hdc, COLORREF color, int mult)\r\n+{\r\n+    for(int x = 1; x < 1920; x + (1 * mult))\r\n+    {\r\n+        for(int y = 1; y < 1080; y + (1 * mult))\r\n+        {\r\n+            //Draw pixel\r\n+            SetPixel(hdc, x, y, color);\r\n+\r\n+            //Testing lag to cause pixel delay\r\n+            std::cout << \"Lag: Thread\\n\";\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+int main()\r\n+{\r\n+    //Define variables\r\n+    HWND hwnd = GetDesktopWindow();\r\n+    HDC hdc = GetWindowDC(hwnd);\r\n+\r\n+    std::list<std::thread*> threadList;\r\n+\r\n+    //Start threads\r\n+\r\n+    threadList.push_back(new std::thread(drawScreen, std::ref(hdc), RGB(255, 0, 0) ) );\r\n+    sleep(1000);\r\n+    threadList.push_back(new std::thread(drawScreen, std::ref(hdc), RGB(200, 100, 40)));\r\n+\r\n+    //Utilize main thread\r\n+\r\n+    for(int x = 1; x < 1920; x++)\r\n+    {\r\n+        for(int y = 1; y < 1080; y++)\r\n+        {\r\n+            //Draw pixel\r\n+            SetPixel(hdc, x, y, RGB(255, 255, 255));\r\n+\r\n+            //Testing lag to cause pixel delay\r\n+            std::cout << \"Lag: Main\\n\";\r\n+        }\r\n+    }\r\n+\r\n+    //End system\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692672251194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,50 @@\n+#include <iostream>\r\n+#include <windows.h>\r\n+#include <thread>\r\n+#include <list>\r\n+\r\n+void drawScreen(HDC hdc, COLORREF color, int mult)\r\n+{\r\n+    for(int x = 1; x < 1920; x + (1 * mult))\r\n+    {\r\n+        for(int y = 1; y < 1080; y + (1 * mult))\r\n+        {\r\n+            //Draw pixel\r\n+            SetPixel(hdc, x, y, color);\r\n+\r\n+            //Testing lag to cause pixel delay\r\n+            std::cout << \"Lag: Thread\\n\";\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+int main()\r\n+{\r\n+    //Define variables\r\n+    HWND hwnd = GetDesktopWindow();\r\n+    HDC hdc = GetWindowDC(hwnd);\r\n+\r\n+    std::list<std::thread*> threadList;\r\n+\r\n+    //Start threads\r\n+\r\n+    threadList.push_back(new std::thread(drawScreen, std::ref(hdc), RGB(255, 0, 0), 1));\r\n+    sleep(1000);\r\n+    threadList.push_back(new std::thread(drawScreen, std::ref(hdc), RGB(200, 100, 40), 2));\r\n+\r\n+    //Utilize main thread\r\n+\r\n+    for(int x = 1; x < 1920; x++)\r\n+    {\r\n+        for(int y = 1; y < 1080; y++)\r\n+        {\r\n+            //Draw pixel\r\n+            SetPixel(hdc, x, y, RGB(255, 255, 255));\r\n+\r\n+            //Testing lag to cause pixel delay\r\n+            std::cout << \"Lag: Main\\n\";\r\n+        }\r\n+    }\r\n+\r\n+    //End system\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692672361913,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,50 @@\n+#include <iostream>\r\n+#include <windows.h>\r\n+#include <thread>\r\n+#include <list>\r\n+\r\n+void drawScreen(HDC hdc, COLORREF color, int mult)\r\n+{\r\n+    for(int x = 1; x < 1920; x++)\r\n+    {\r\n+        for(int y = 1; y < 1080; y++)\r\n+        {\r\n+            //Draw pixel\r\n+            SetPixel(hdc, x, y, RGB(255, x / 7.5, y / 4.2));\r\n+\r\n+            //Testing lag to cause pixel delay\r\n+            std::cout << \"Lag: Thread\\n\";\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+int main()\r\n+{\r\n+    //Define variables\r\n+    HWND hwnd = GetDesktopWindow();\r\n+    HDC hdc = GetWindowDC(hwnd);\r\n+\r\n+    std::list<std::thread*> threadList;\r\n+\r\n+    //Start threads\r\n+\r\n+    threadList.push_back(new std::thread(drawScreen, std::ref(hdc), RGB(255, 0, 0), 1));\r\n+    sleep(1000);\r\n+    threadList.push_back(new std::thread(drawScreen, std::ref(hdc), RGB(200, 100, 40), 2));\r\n+\r\n+    //Utilize main thread\r\n+\r\n+    for(int x = 1; x < 1920; x++)\r\n+    {\r\n+        for(int y = 1; y < 1080; y++)\r\n+        {\r\n+            //Draw pixel\r\n+            SetPixel(hdc, x, y, RGB(255, 255, 255));\r\n+\r\n+            //Testing lag to cause pixel delay\r\n+            std::cout << \"Lag: Main\\n\";\r\n+        }\r\n+    }\r\n+\r\n+    //End system\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692672391594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,50 @@\n+#include <iostream>\r\n+#include <windows.h>\r\n+#include <thread>\r\n+#include <list>\r\n+\r\n+void drawScreen(HDC hdc, COLORREF color, int mult)\r\n+{\r\n+    for(int x = 0; x < 1920; x++)\r\n+    {\r\n+        for(int y = 0; y < 1080; y++)\r\n+        {\r\n+            //Draw pixel\r\n+            SetPixel(hdc, x, y, RGB(255, x / 7.5, y / 4.2));\r\n+\r\n+            //Testing lag to cause pixel delay\r\n+            //std::cout << \"Lag: Thread\\n\";\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+int main()\r\n+{\r\n+    //Define variables\r\n+    HWND hwnd = GetDesktopWindow();\r\n+    HDC hdc = GetWindowDC(hwnd);\r\n+\r\n+    std::list<std::thread*> threadList;\r\n+\r\n+    //Start threads\r\n+\r\n+    threadList.push_back(new std::thread(drawScreen, std::ref(hdc), RGB(255, 0, 0), 1));\r\n+    sleep(1000);\r\n+    threadList.push_back(new std::thread(drawScreen, std::ref(hdc), RGB(200, 100, 40), 2));\r\n+\r\n+    //Utilize main thread\r\n+\r\n+    for(int x = 1; x < 1920; x++)\r\n+    {\r\n+        for(int y = 1; y < 1080; y++)\r\n+        {\r\n+            //Draw pixel\r\n+            SetPixel(hdc, x, y, RGB(255, 255, 255));\r\n+\r\n+            //Testing lag to cause pixel delay\r\n+            //std::cout << \"Lag: Main\\n\";\r\n+        }\r\n+    }\r\n+\r\n+    //End system\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692672446732,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,53 @@\n+#include <iostream>\r\n+#include <windows.h>\r\n+#include <thread>\r\n+#include <list>\r\n+\r\n+void drawScreen(HDC hdc, COLORREF color, int mult)\r\n+{\r\n+    while(true)\r\n+    {\r\n+        for(int x = 0; x < 1920; x++)\r\n+        {\r\n+            for(int y = 0; y < 1080; y++)\r\n+            {\r\n+                //Draw pixel\r\n+                SetPixel(hdc, x, y, RGB(255, x / 7.4, y / 4.2));\r\n+\r\n+                //Testing lag to cause pixel delay\r\n+                //std::cout << \"Lag: Thread\\n\";\r\n+            }\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+int main()\r\n+{\r\n+    //Define variables\r\n+    HWND hwnd = GetDesktopWindow();\r\n+    HDC hdc = GetWindowDC(hwnd);\r\n+\r\n+    std::list<std::thread*> threadList;\r\n+\r\n+    //Start threads\r\n+\r\n+    threadList.push_back(new std::thread(drawScreen, std::ref(hdc), RGB(255, 0, 0), 1));\r\n+    sleep(1000);\r\n+    threadList.push_back(new std::thread(drawScreen, std::ref(hdc), RGB(200, 100, 40), 2));\r\n+\r\n+    //Utilize main thread\r\n+\r\n+    for(int x = 1; x < 1920; x++)\r\n+    {\r\n+        for(int y = 1; y < 1080; y++)\r\n+        {\r\n+            //Draw pixel\r\n+            SetPixel(hdc, x, y, RGB(255, 255, 255));\r\n+\r\n+            //Testing lag to cause pixel delay\r\n+            //std::cout << \"Lag: Main\\n\";\r\n+        }\r\n+    }\r\n+\r\n+    //End system\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692672459517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,56 @@\n+#include <iostream>\r\n+#include <windows.h>\r\n+#include <thread>\r\n+#include <list>\r\n+\r\n+void drawScreen(HDC hdc, COLORREF color, int mult)\r\n+{\r\n+    while(true)\r\n+    {\r\n+        for(int x = 0; x < 1920; x++)\r\n+        {\r\n+            for(int y = 0; y < 1080; y++)\r\n+            {\r\n+                //Draw pixel\r\n+                SetPixel(hdc, x, y, RGB(255, x / 7.4, y / 4.2));\r\n+\r\n+                //Testing lag to cause pixel delay\r\n+                //std::cout << \"Lag: Thread\\n\";\r\n+            }\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+int main()\r\n+{\r\n+    //Define variables\r\n+    HWND hwnd = GetDesktopWindow();\r\n+    HDC hdc = GetWindowDC(hwnd);\r\n+\r\n+    std::list<std::thread*> threadList;\r\n+\r\n+    //Start threads\r\n+\r\n+    threadList.push_back(new std::thread(drawScreen, std::ref(hdc), RGB(255, 0, 0), 1));\r\n+    sleep(1000);\r\n+    threadList.push_back(new std::thread(drawScreen, std::ref(hdc), RGB(200, 100, 40), 2));\r\n+\r\n+    //Utilize main thread\r\n+    \r\n+    while(true)\r\n+    {\r\n+        for(int x = 1; x < 1920; x++)\r\n+        {\r\n+            for(int y = 1; y < 1080; y++)\r\n+            {\r\n+                //Draw pixel\r\n+                SetPixel(hdc, x, y, RGB(255, 255, 255));\r\n+\r\n+                //Testing lag to cause pixel delay\r\n+                //std::cout << \"Lag: Main\\n\";\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    //End system\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692672696718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,57 @@\n+#include <iostream>\r\n+#include <windows.h>\r\n+#include <thread>\r\n+#include <list>\r\n+\r\n+void drawScreen(HDC hdc, COLORREF color, int mult)\r\n+{\r\n+    while(true)\r\n+    {\r\n+        for(int x = 0; x < 1920; x++)\r\n+        {\r\n+            for(int y = 0; y < 1080; y++)\r\n+            {\r\n+                //Draw pixel\r\n+                SetPixel(hdc, x, y, RGB(255, x / 7.6, y / 4.3));\r\n+\r\n+                //Testing lag to cause pixel delay\r\n+                //std::cout << \"Lag: Thread\\n\";\r\n+            }\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+int main()\r\n+{\r\n+    //Define variables\r\n+    HWND hwnd = GetDesktopWindow();\r\n+    HDC hdc = GetWindowDC(hwnd);\r\n+\r\n+    std::list<std::thread*> threadList;\r\n+\r\n+    //Start threads\r\n+\r\n+    threadList.push_back(new std::thread(drawScreen, std::ref(hdc), RGB(255, 0, 0), 1));\r\n+    sleep(2000);\r\n+    threadList.push_back(new std::thread(drawScreen, std::ref(hdc), RGB(200, 100, 40), 2));\r\n+\r\n+    //Utilize main thread\r\n+    \r\n+    while(true)\r\n+    {\r\n+        for(int x = 1; x < 1920; x++)\r\n+        {\r\n+            for(int y = 1; y < 1080; y++)\r\n+            {\r\n+                //Draw pixel\r\n+                SetPixel(hdc, x, y, RGB(255, 255, 255));\r\n+\r\n+                //Testing lag to cause pixel delay\r\n+                //std::cout << \"Lag: Main\\n\";\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    //End system\r\n+    return 0;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692672774116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,57 @@\n+#include <iostream>\r\n+#include <windows.h>\r\n+#include <thread>\r\n+#include <list>\r\n+\r\n+void drawScreen(HDC hdc, COLORREF color, int mult)\r\n+{\r\n+    while(true)\r\n+    {\r\n+        for(int x = 0; x < 1920; x++)\r\n+        {\r\n+            for(int y = 0; y < 1080; y++)\r\n+            {\r\n+                //Draw pixel\r\n+                SetPixel(hdc, x, y, RGB(255, x / 7.6, y / 4.3));\r\n+\r\n+                //Testing lag to cause pixel delay\r\n+                //std::cout << \"Lag: Thread\\n\";\r\n+            }\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+int main()\r\n+{\r\n+    //Define variables\r\n+    HWND hwnd = GetDesktopWindow();\r\n+    HDC hdc = GetWindowDC(hwnd);\r\n+\r\n+    std::list<std::thread*> threadList;\r\n+\r\n+    //Start threads\r\n+\r\n+    threadList.push_back(new std::thread(drawScreen, std::ref(hdc), RGB(255, 0, 0), 1));\r\n+    //sleep(2000);\r\n+    //threadList.push_back(new std::thread(drawScreen, std::ref(hdc), RGB(200, 100, 40), 2));\r\n+\r\n+    //Utilize main thread\r\n+    \r\n+    while(true)\r\n+    {\r\n+        for(int x = 1; x < 1920; x++)\r\n+        {\r\n+            for(int y = 1; y < 1080; y++)\r\n+            {\r\n+                //Draw pixel\r\n+                SetPixel(hdc, x, y, RGB(255, 255, 255));\r\n+\r\n+                //Testing lag to cause pixel delay\r\n+                //std::cout << \"Lag: Main\\n\";\r\n+            }\r\n+        }\r\n+    }\r\n+\r\n+    //End system\r\n+    return 0;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692673659588,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,105 @@\n+#include <iostream>\r\n+#include <windows.h>\r\n+#include <thread>\r\n+#include <list>\r\n+#include <math.h>\r\n+#include <algorithm>\r\n+\r\n+#include <cstdint>\r\n+#include <iomanip>\r\n+\r\n+struct Vec2\r\n+{\r\n+\tint x;\r\n+\tint y;\r\n+\t\r\n+\tVec2()\r\n+\t{\r\n+\t\tx = 0;\r\n+\t\ty = 0;\r\n+\t}\r\n+\t\r\n+\tVec2(int _x, int _y)\r\n+\t{\r\n+\t\tx = _x;\r\n+\t\ty = _y;\t\r\n+\t}\t\r\n+};\r\n+\r\n+float dis(Vec2 pos1, Vec2 pos2)\r\n+{\r\n+\treturn std::sqrt(std::pow(pos2.x + pos1.x, 2) - std::pow(pos2.y + pos1.y, 2));\r\n+}\r\n+\r\n+void drawScreen(HDC hdc, COLORREF color, int mult)\r\n+{\r\n+    while(true)\r\n+    {\r\n+        for(int x = 0; x < 1920; x++)\r\n+        {\r\n+            for(int y = 0; y < 1080; y++)\r\n+            {\r\n+                //Draw pixel\r\n+                \r\n+\t\t\t\t//SetPixel(hdc, x, y, RGB(255, x / 7.6, y / 4.3));\r\n+\t\t\t\t\r\n+\t\t\t\t//SetPixel(hdc, x, y, color);\r\n+\r\n+                SetPixel(hdc, x, y, RGB(255, 255, std::clamp(dis(Vec2(960, 540), Vec2(x, y)), 0, 255)));\r\n+\r\n+\r\n+                //Testing lag to cause pixel delay\r\n+                //std::cout << \"Lag: Thread\\n\";\r\n+            }\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+int main()\r\n+{\r\n+    //Define variables\r\n+    HWND hwnd = GetDesktopWindow();\r\n+    HDC hdc = GetWindowDC(hwnd);\r\n+\r\n+    std::list<std::thread*> threadList;\r\n+    \r\n+    \r\n+    std::cout << \"3\\n\";\r\n+    sleep(1);\r\n+    std::cout << \"2\\n\";\r\n+    sleep(1);\r\n+    std::cout << \"1\\n\";\r\n+    sleep(1);\r\n+\t\r\n+\r\n+    //Start threads\r\n+\r\n+    threadList.push_back(new std::thread(drawScreen, std::ref(hdc), RGB(255, 0, 0), 1));\r\n+    sleep(0.5);\r\n+    threadList.push_back(new std::thread(drawScreen, std::ref(hdc), RGB(20, 200, 40), 2));\r\n+\r\n+    //Utilize main thread\r\n+    \r\n+    //while(true)\r\n+    //{\r\n+        //for(int x = 1; x < 1920; x++)\r\n+        //{\r\n+        //    for(int y = 1; y < 1080; y++)\r\n+        //    {\r\n+        //        //Draw pixel\r\n+        //        SetPixel(hdc, x, y, RGB(255, 255, 255));\r\n+\t\t//\r\n+        //        //Testing lag to cause pixel delay\r\n+        //        //std::cout << \"Lag: Main\\n\";\r\n+        //    }\r\n+        //}\r\n+    //}\r\n+\r\n+\twhile(true)\r\n+\t{\r\n+\t\tstd::cout << \"Placeholder\\n\";\r\n+\t}\r\n+\r\n+    //End system\r\n+    return 0;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1692673685737,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,105 @@\n+#include <iostream>\r\n+#include <windows.h>\r\n+#include <thread>\r\n+#include <list>\r\n+#include <math.h>\r\n+#include <algorithm>\r\n+\r\n+#include <cstdint>\r\n+#include <iomanip>\r\n+\r\n+struct Vec2\r\n+{\r\n+\tint x;\r\n+\tint y;\r\n+\t\r\n+\tVec2()\r\n+\t{\r\n+\t\tx = 0;\r\n+\t\ty = 0;\r\n+\t}\r\n+\t\r\n+\tVec2(int _x, int _y)\r\n+\t{\r\n+\t\tx = _x;\r\n+\t\ty = _y;\t\r\n+\t}\t\r\n+};\r\n+\r\n+float dis(Vec2 pos1, Vec2 pos2)\r\n+{\r\n+\treturn std::sqrt(std::pow(pos2.x + pos1.x, 2) - std::pow(pos2.y + pos1.y, 2));\r\n+}\r\n+\r\n+void drawScreen(HDC hdc, COLORREF color, int mult)\r\n+{\r\n+    while(true)\r\n+    {\r\n+        for(int x = 0; x < 1920; x++)\r\n+        {\r\n+            for(int y = 0; y < 1080; y++)\r\n+            {\r\n+                //Draw pixel\r\n+                \r\n+\t\t\t\t//SetPixel(hdc, x, y, RGB(255, x / 7.6, y / 4.3));\r\n+\t\t\t\t\r\n+\t\t\t\t//SetPixel(hdc, x, y, color);\r\n+\r\n+                SetPixel(hdc, x, y, RGB(255, 255, std::clamp((int)dis(Vec2(960, 540), Vec2(x, y)), 0, 255)));\r\n+\r\n+\r\n+                //Testing lag to cause pixel delay\r\n+                //std::cout << \"Lag: Thread\\n\";\r\n+            }\r\n+        }\r\n+    }\r\n+}\r\n+\r\n+int main()\r\n+{\r\n+    //Define variables\r\n+    HWND hwnd = GetDesktopWindow();\r\n+    HDC hdc = GetWindowDC(hwnd);\r\n+\r\n+    std::list<std::thread*> threadList;\r\n+    \r\n+    \r\n+    std::cout << \"3\\n\";\r\n+    sleep(1);\r\n+    std::cout << \"2\\n\";\r\n+    sleep(1);\r\n+    std::cout << \"1\\n\";\r\n+    sleep(1);\r\n+\t\r\n+\r\n+    //Start threads\r\n+\r\n+    threadList.push_back(new std::thread(drawScreen, std::ref(hdc), RGB(255, 0, 0), 1));\r\n+    sleep(0.5);\r\n+    threadList.push_back(new std::thread(drawScreen, std::ref(hdc), RGB(20, 200, 40), 2));\r\n+\r\n+    //Utilize main thread\r\n+    \r\n+    //while(true)\r\n+    //{\r\n+        //for(int x = 1; x < 1920; x++)\r\n+        //{\r\n+        //    for(int y = 1; y < 1080; y++)\r\n+        //    {\r\n+        //        //Draw pixel\r\n+        //        SetPixel(hdc, x, y, RGB(255, 255, 255));\r\n+\t\t//\r\n+        //        //Testing lag to cause pixel delay\r\n+        //        //std::cout << \"Lag: Main\\n\";\r\n+        //    }\r\n+        //}\r\n+    //}\r\n+\r\n+\twhile(true)\r\n+\t{\r\n+\t\tstd::cout << \"Placeholder\\n\";\r\n+\t}\r\n+\r\n+    //End system\r\n+    return 0;\r\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1692671947287,
            "name": "Commit-0",
            "content": "#include <iostream>\r\n#include <windows.h>\r\n#include <thread>\r\n#include <list>\r\n\r\nvoid drawScreen(HDC hdc, COLORREF color)\r\n{\r\n    for(int x = 1; x < 1920; x++)\r\n    {\r\n        for(int y = 1; y < 1080; y++)\r\n        {\r\n            //Draw pixel\r\n            SetPixel(hdc, x, y, color);\r\n        }\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    //Define variables\r\n    HWND hwnd = GetDesktopWindow();\r\n    HDC hdc = GetWindowDC(hwnd);\r\n\r\n    std::list<std::thread*> threadList;\r\n\r\n    //Start threads\r\n\r\n    threadList.push_back(new std::thread(drawScreen, std::ref(hdc), RGB(255, 0, 0)));\r\n    sleep(1000);\r\n    threadList.push_back(new std::thread(drawScreen, std::ref(hdc), RGB(200, 100, 40)));\r\n\r\n    //Utilize main thread\r\n\r\n    for(int x = 1; x < 1920; x++)\r\n    {\r\n        for(int y = 1; y < 1080; y++)\r\n        {\r\n            //Draw pixel\r\n            SetPixel(hdc, x, y, RGB(255, 255, 255));\r\n        }\r\n    }\r\n\r\n    //End system\r\n}"
        }
    ]
}